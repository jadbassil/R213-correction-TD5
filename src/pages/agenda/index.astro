---
//@ts-nocheck
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import { filterByCategory, getEvents } from "../../js/backend.mjs";

let events = [];
let categories = ["Tout", "Théâtre", "Musique", "Danse"];

/**
 * Ce fichier gère les requêtes HTTP pour la page d'agenda.
 * 
 * Si la méthode de la requête est "GET", il récupère une liste d'événements.
 * 
 * Si la méthode de la requête est "POST", il traite les données du formulaire pour filtrer les événements par catégorie.
 * - Si la catégorie choisie n'est pas "Tout", il filtre les événements par cette catégorie et met la catégorie choisie en haut de la liste.
 * - Si la catégorie choisie est "Tout", il récupère tous les événements.
 * 
 */

if (Astro.request.method == "GET") {
    events = await getEvents(); // Retourne une liste d'événements en ejoutant un champ "img" contenant le URL complet de l'image associée à l'événement.
    console.log(categories);
} else if (Astro.request.method == "POST") {
    const data = await Astro.request.formData();
    const categorie = data.get("categorie");
    if (categorie != "Tout") {
        const response = await filterByCategory(categorie);
        events = response.events;
        console.log(response.message);
        // Mettre la categire choisie en haut de la liste
        categories = [categorie, ...categories.filter((c) => c != categorie)];
    } else {
        events = await getEvents();
    }
}
---

<Layout>
    <h1 class="text-6xl">Agenda</h1>
    <form action="/agenda" method="post">
        <label for="categorie">filtrer par categorie:</label>
        <select name="categorie">
            {
                // parcourir la liste de catégories et afficher chaque catégorie dans une balise <option>
                categories.map((categorie) => (
                    <option value={categorie}>{categorie}</option>
                ))
            }
        </select>
        <input type="submit" value="Filtrer" class="text-blue-800 under"/>
        <br /><br />
    </form>
    <a href="/agenda/add" class="text-blue-800 underline">Ajouter un événement</a>
    {
        // parcourir la liste d'événements et afficher chaque événement en utilisant le composant Card. L'operateur spread ... permet de passer toutes les propriétés de l'objet event à la balise <Card>
        events.map((event) => <Card {...event} />)
    }
</Layout>
